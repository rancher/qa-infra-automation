---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars.yaml
  tasks:
    - name: Check if kubeconfig file exists
      stat:
        path: "{{ kubeconfig_file }}"
      register: kubeconfig_file_stat

    - name: Fail if kubeconfig file does not exist
      fail:
        msg: "kubeconfig file '{{ kubeconfig_file }}' does not exist."
      when: not kubeconfig_file_stat.stat.exists

    - name: Install elemental-operator-crds
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_file }}"
        name: elemental-operator-crds
        chart_ref: "oci://registry.suse.com/rancher/elemental-operator-crds-chart"
        release_namespace: cattle-elemental-system
        create_namespace: true
        wait: true
        wait_timeout: "60s"
      retries: 3
      delay: 60

    - name: Install elemental-operator
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_file }}"
        name: elemental-operator
        chart_ref: "oci://registry.suse.com/rancher/elemental-operator-chart"
        release_namespace: cattle-elemental-system
        create_namespace: true
        wait: true
        wait_timeout: "60s"
      retries: 3
      delay: 60

    - name: Apply Elemental config
      kubernetes.core.k8s:
        state: present
        src: "{{ elementalconfig_file }}"
        kubeconfig: "{{ kubeconfig_file }}"
    
    - name: Wait for Elemental ISO be prepared
      command: kubectl wait --timeout=600s --for=condition=ready pod -n fleet-default fire-img --kubeconfig "{{ kubeconfig_file }}"
      retries: 5
      delay: 10

    - name: Get Download Url
      command: kubectl get seedimage -n fleet-default fire-img -o jsonpath="{.status.downloadURL}" --kubeconfig "{{ kubeconfig_file }}"
      register: download_url
    
    - name: Show Download Url
      debug:
        var: download_url.stdout

    - name: Copying file to Elemental node
      ansible.builtin.shell: |
        scp -o StrictHostKeyChecking=no -i {{ ssh_private_key_file }} ./init-node.sh {{ ssh_user }}@{{ elemental_node_public_ip }}:/tmp/
      failed_when: false
    
    - name: Creating Elemental VM
      ansible.builtin.shell: |
        ssh -i {{ ssh_private_key_file }} {{ ssh_user }}@{{ elemental_node_public_ip }} "export DOWNLOAD_URL={{ download_url.stdout }} && sh /tmp/init-node.sh"
      failed_when: false
    
    - name: Wait for Elemental cluster be ready
      command: kubectl wait --timeout=1800s --for=condition=ready MachineDeployment -n fleet-default {{ elemental_pool_name }} --kubeconfig "{{ kubeconfig_file }}"