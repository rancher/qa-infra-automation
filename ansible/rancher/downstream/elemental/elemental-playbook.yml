---
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars.yaml
  tasks:
    - name: Check if kubeconfig file exists
      stat:
        path: "{{ kubeconfig_file }}"
      register: kubeconfig_file_stat

    - name: Fail if kubeconfig file does not exist
      fail:
        msg: "kubeconfig file '{{ kubeconfig_file }}' does not exist."
      when: not kubeconfig_file_stat.stat.exists

    - name: Install elemental-operator-crds
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_file }}"
        name: elemental-operator-crds
        chart_ref: "oci://registry.suse.com/rancher/elemental-operator-crds-chart"
        release_namespace: cattle-elemental-system
        create_namespace: true
        wait: true
        wait_timeout: "60s"
      retries: 3
      delay: 60

    - name: Install elemental-operator
      kubernetes.core.helm:
        kubeconfig: "{{ kubeconfig_file }}"
        name: elemental-operator
        chart_ref: "oci://registry.suse.com/rancher/elemental-operator-chart"
        release_namespace: cattle-elemental-system
        create_namespace: true
        wait: true
        wait_timeout: "60s"
      retries: 3
      delay: 60

    - name: Apply Elemental config
      kubernetes.core.k8s:
        state: present
        src: "{{ elementalconfig_file }}"
        kubeconfig: "{{ kubeconfig_file }}"
    
    - name: Wait for Elemental ISO be prepared
      command: kubectl wait --timeout=600s --for=condition=ready pod -n fleet-default fire-img --kubeconfig "{{ kubeconfig_file }}"
      retries: 5
      delay: 10

    - name: Get Download Url
      command: kubectl get seedimage -n fleet-default fire-img -o jsonpath="{.status.downloadURL}" --kubeconfig "{{ kubeconfig_file }}"
      register: download_url
    
    - name: Show Download Url
      debug:
        var: download_url.stdout

- hosts: elemental_node
  connection: ssh
  gather_facts: false
  vars_files:
    - vars.yaml
  vars:
    vm_name: "vm-elemental-node"
    vm_iso: "/tmp/elemental.iso"
    vm_net: "default"
    vm_os: "slem5.3"
    vm_img: "/tmp/vm-elemental-node.qcow2"
    vm_cores: 8
    vm_disksize: 60
    vm_ramsize: 8000

  tasks:
    - name: Prepare Elemental node
      ansible.builtin.shell: |
        wget --no-check-certificate -O /tmp/elemental.iso {{ hostvars['localhost'].download_url.stdout }}
        sudo apt-get update -y
        sudo apt-get install -y virt-manager
      failed_when: false
    
    - name: Creating Elemental VM
      ansible.builtin.shell: | 
        sudo virt-install \
          --name {{ vm_name }} \
          --memory {{ vm_ramsize }} \
          --vcpus {{ vm_cores }} \
          --os-variant={{ vm_os }} \
          --cdrom {{ vm_iso }} \
          --network network={{ vm_net }},model=virtio \
          --disk path={{ vm_img }},size={{ vm_disksize }},bus=virtio,format=qcow2 \
          --boot uefi \
          --cpu host-model \
          --autostart \
          --noautoconsole \
          --wait=-1 \
          --check disk_size=off
      failed_when: false
  
- hosts: localhost
  connection: local
  gather_facts: false
  vars_files:
    - vars.yaml
  tasks:
    - name: Wait for Elemental cluster to be ready
      command: kubectl wait --timeout=1800s --for=condition=ready MachineDeployment -n fleet-default {{ elemental_pool_name }} --kubeconfig "{{ kubeconfig_file }}"