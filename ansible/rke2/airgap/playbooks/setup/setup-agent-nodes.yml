---
- name: Setup RKE2 Agent Nodes
  hosts: airgap_nodes
  become: true
  gather_facts: true
  serial: 1
  vars:
      target_group: "{{ target | default('rancher') }}"
  tasks:
    - name: Get server token from first node
      ansible.builtin.slurp:
        src: /var/lib/rancher/rke2/server/token
      register: server_token_content
      when: inventory_hostname == groups[target_group][0]
      delegate_to: "{{ groups[target_group][0] }}"

    - name: Set server token fact for all nodes
      ansible.builtin.set_fact:
        rke2_token: "{{ hostvars[groups[target_group][0]]['server_token_content']['content'] | b64decode | trim }}"
      when: hostvars[groups[target_group][0]]['server_token_content'] is defined

    - name: Stop any existing RKE2 services
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: stopped
      failed_when: false
      loop:
        - rke2-server
        - rke2-agent

    - name: Generate agent configuration for additional nodes
      ansible.builtin.template:
        src: "{{ playbook_dir }}/../../roles/rke2_install/templates/agent-config.yaml.j2"
        dest: /etc/rancher/rke2/config.yaml
        owner: root
        group: root
        mode: '0644'
      when: inventory_hostname != groups[target_group][0]

    - name: Display agent configuration
      ansible.builtin.command: cat /etc/rancher/rke2/config.yaml
      register: agent_config
      when: inventory_hostname != groups[target_group][0]
      changed_when: false

    - name: Show agent configuration
      ansible.builtin.debug:
        msg: |
          Agent Configuration for {{ inventory_hostname }}:
          {{ agent_config.stdout }}
      when: inventory_hostname != groups[target_group][0]

    - name: Start RKE2 agent service on additional nodes
      ansible.builtin.systemd:
        name: rke2-agent
        state: started
        enabled: true
      when: inventory_hostname != groups[target_group][0]

    - name: Wait for agent to join cluster
      ansible.builtin.pause:
        seconds: 30
      when: inventory_hostname != groups[target_group][0]

    - name: Check RKE2 service status
      ansible.builtin.systemd:
        name: "{{ 'rke2-server' if inventory_hostname == groups[target_group][0] else 'rke2-agent' }}"
      register: rke2_status

    - name: Display service status
      ansible.builtin.debug:
        msg: |
          {{ inventory_hostname }} RKE2 Service Status:
          Name: {{ rke2_status.name }}
          State: {{ rke2_status.status.ActiveState }}
          Enabled: {{ rke2_status.status.UnitFileState }}
